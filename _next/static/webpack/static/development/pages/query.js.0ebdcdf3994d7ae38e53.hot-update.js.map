{"version":3,"file":"static/webpack/static/development/pages/query.js.0ebdcdf3994d7ae38e53.hot-update.js","sources":["webpack:///./components/queryRename.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { QueryState, IStudent, IResp } from '../constant';\nimport { renameApi } from '../utils';\n\ninterface IProps {\n  data: IStudent;\n  changeCurrent: (update: any) => void;\n}\n\nexport default ((props: IProps) => {\n  const [newName, setNewName] = useState<string>('');\n\n  const handleNewName = (event: React.FormEvent<HTMLInputElement>) => {\n    event.preventDefault();\n    setNewName(event.currentTarget.value);\n  };\n\n  const handleSubmit = async (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    const data: IResp = await renameApi(props.data.student_id, newName);\n    if (null!==data && data.applied) {\n      props.changeCurrent(QueryState.END);\n    } else {\n      alert(data.error_msg);\n      props.changeCurrent(QueryState.INPUT);\n    }\n  };\n\n  return (\n    <form className=\"center column\" onSubmit={handleSubmit}>\n      <span className=\"title\">欲更改的中英文姓名</span>\n      <input\n        type=\"text\"\n        id=\"input-chinese\"\n        placeholder=\"中文\"\n        onChange={handleNewName}\n      />\n      <input\n        type=\"text\"\n        id=\"input-english\"\n        placeholder=\"英文 - 此欄位佔不開放\"\n        disabled\n      />\n\n      <div className=\"center row\" style={{ marginTop: '46px' }}>\n        <button style={{ marginRight: '60px' }} type=\"submit\">\n          <span>確認 CONFIRM</span>\n        </button>\n        <button onClick={() => props.changeCurrent(QueryState.INPUT)} type=\"button\">\n          <span>返回</span>\n        </button>\n      </div>\n\n      <style jsx>{`\n        .center {\n          display: flex;\n          justify-content: center;\n          align-items: center;\n        }\n        .column {\n          flex-direction: column;\n        }\n        .row {\n          flex-direction: row;\n        }\n        .title {\n          font-family: SegoeUI;\n          font-size: 40px;\n          line-height: 1.2;\n          letter-spacing: 0.08px;\n          text-align: center;\n          color: #676464;\n          margin-bottom: 38px;\n        }\n        input {\n          width: 590px;\n          height: 73px;\n          border-radius: 20px;\n          box-shadow: 5px 6px 6px 0 rgba(0, 0, 0, 0.16);\n          background-color: #ffffff;\n          border: 0px;\n          margin: 20px 0 20px 0;\n          padding: 0 20px 0 20px;\n          font-size: 35px;\n        }\n        input::placeholder {\n          font-family: EdwardianScriptITC;\n          font-size: 35px;\n          line-height: 1.5;\n          text-align: left;\n          color: rgba(186, 184, 184, 0.66);\n        }\n        button {\n          width: 240px;\n          height: 45px;\n          border: 0px;\n          border-radius: 31px;\n          background-color: #4781e6;\n        }\n        button > span {\n          font-family: SegoeUI;\n          font-size: 23px;\n          line-height: 1.22;\n          letter-spacing: 0.05px;\n          text-align: center;\n          color: rgba(247, 247, 247, 0.92);\n        }\n      `}</style>\n    </form>\n  );\n}) as React.FC<IProps>;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AApBA;AAAA;AAAA;AAiFA;;;;A","sourceRoot":""}