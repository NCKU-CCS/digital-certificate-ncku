{"version":3,"file":"static/webpack/static/development/pages/index.js.04d5ad2375c6791168c0.hot-update.js","sources":["webpack:///./components/ready.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Loading from './loading';\nimport { IStudent, IResp, IndexState, ReissueState } from '../constant';\nimport { issueApi, reissueApi } from '../utils';\n\ninterface IProps {\n  current: IndexState | ReissueState;\n  data: IStudent;\n  isEnglish: boolean;\n  changeCurrent: (update: any) => void;\n}\n\nexport default ((props: IProps) => {\n  const [isLoad, setLoad] = useState(true);\n\n  const handleClick = async (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    if (props.current === IndexState.READY) {\n      const data: IResp = await issueApi(\n        props.data.student_id,\n        props.isEnglish,\n      );\n      if (null !== data && data.applied) {\n        props.changeCurrent(IndexState.SUCCESS);\n      } else {\n        alert(null !== data ? data.error_msg : 'Cannot get data');\n        props.changeCurrent(IndexState.INPUT);\n      }\n    } else {\n      const data: IResp = await reissueApi(\n        props.data.student_id,\n        props.isEnglish,\n      );\n      if (null !== data && data.applied) {\n        props.changeCurrent(ReissueState.SUCCESS);\n      } else {\n        alert(null !== data ? data.error_msg : 'Cannot get data');\n        props.changeCurrent(ReissueState.INPUT);\n      }\n    }\n  };\n\n  return (\n    <div className=\"ready\">\n      {\n        (isLoad) ? (\n          <div id=\"load\">\n            <Loading />\n          </div>\n        ) : (\n          <React.Fragment>\n            <h1>資料確認</h1>\n            <span>學生姓名：{props.data.chinese_name}</span>\n            <span>出生日期：{props.data.birth_date}</span>\n            <span>\n              畢業系所：{props.data.graduate_univ + props.data.graduate_dept}\n            </span>\n            <span>其他資訊：{props.data.minor_d_major}</span>\n            <span>\n              申請證書：\n              {`${props.isEnglish ? '英文' : '中文'}證書 / ${\n                props.current === IndexState.READY ? '初辦' : '補證'\n              }`}\n            </span>\n            <div className=\"buttonlist\">\n              <button\n                onClick={() =>\n                  props.changeCurrent(\n                    props.current === IndexState.READY\n                      ? IndexState.INPUT\n                      : ReissueState.INPUT,\n                  )\n                }\n              >\n                重新輸入\n              </button>\n              <div style={{ width: '10%' }} />\n              <button onClick={handleClick}>確定送出</button>\n            </div>\n          </React.Fragment>\n        )\n      }\n      <style jsx>{`\n        .ready {\n          min-width: 800px;\n          min-height: 600px;\n          border-radius: 20px;\n          border: solid 6px rgba(112, 112, 112, 0.16);\n          display: flex;\n          justify-content: flex-start;\n          align-items: center;\n          flex-direction: column;\n          color: #707070;\n        }\n        .buttonlist {\n          display: flex;\n          justify-content: center;\n          align-items: space-around;\n          flex-direction: row;\n          margin: 20px 0 20px 0;\n          width: 80%;\n        }\n        h1 {\n          -webkit-text-stroke: 1px #707070;\n          font-size: 48px;\n          text-align: center;\n          margin: 28px 0 0 0;\n        }\n        span {\n          font-size: 40px;\n          text-align: left;\n          width: 90%;\n          margin: 19px 0px 0px 0px;\n        }\n        button {\n          font-size: 32px;\n          color: #ffffff;\n          border: 0px;\n          border-radius: 40px;\n          background-color: rgba(71, 125, 230, 0.97);\n          padding: 5px 40px 5px 40px;\n        }\n        #load {\n          position: absolute;\n          top: 50%;\n          left: 50%;\n          transform: translate(-50%, -50%);\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          flex-direction: column;\n        }\n      `}</style>\n    </div>\n  );\n}) as React.FC<IProps>;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AASA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAcA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAxlCA;AAAA;AAAA;AA4FA;;;;A","sourceRoot":""}