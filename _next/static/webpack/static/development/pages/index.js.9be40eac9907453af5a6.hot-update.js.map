{"version":3,"file":"static/webpack/static/development/pages/index.js.9be40eac9907453af5a6.hot-update.js","sources":["webpack:///./components/loading.tsx","webpack:///./components/ready.tsx"],"sourcesContent":["import React from 'react';\n\nconst Loading: React.FC = () => {\n  return (\n    <React.Fragment>\n      <div className=\"loader\">\n        <div className=\"circle inner\" />\n        <div className=\"circle outer\" />\n      </div>\n      <h1 className=\"text\">LOADING</h1>\n      <style jsx>{`\n        .loader {\n          position: relative;\n          width: 100px;\n          height: 100px;\n        }\n        .circle {\n          position: absolute;\n          top: 0;\n          left: 0;\n          border: 6px solid transparent;\n          transform: rotate(135deg);\n          width: 100px;\n          height: 100px;\n          box-sizing: border-box;\n          border-radius: 50%;\n        }\n        .inner {\n          border-top: 6px solid #a7bbd2;\n          border-right: 6px solid #a7bbd2;\n          animation: spinRight 1s linear infinite;\n          z-index: 998;\n        }\n        .outer {\n          border-top: 6px solid #192a87;\n          border-right: 6px solid #192a87;\n          animation: spinLeft 1s linear infinite;\n          z-index: 999;\n        }\n        @keyframes spinRight {\n          0% {\n            transform: rotate(135deg);\n          }\n          75% {\n            transform: rotate(495deg);\n          }\n          100% {\n            transform: rotate(495deg);\n          }\n        }\n        @keyframes spinLeft {\n          0% {\n            transform: rotate(135deg);\n          }\n          75% {\n            transform: rotate(-225deg);\n          }\n          100% {\n            transform: rotate(-225deg);\n          }\n        }\n        .text {\n          -webkit-text-stroke: 0.4px #4781e6;\n          font-family: CenturyGothic;\n          font-size: 33px;\n          font-weight: normal;\n          font-stretch: normal;\n          font-style: normal;\n          line-height: 1.21;\n          letter-spacing: normal;\n          text-align: center;\n          color: #4781e6;\n          width: 200px;\n        }\n        .text::after {\n          content: '';\n          animation: textAdd 1.5s linear infinite;\n        }\n        @keyframes textAdd {\n          0% {\n            content: '.';\n          }\n          33% {\n            content: '..';\n          }\n          66% {\n            content: '...';\n          }\n          100% {\n            content: '.';\n          }\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nexport default Loading;\n","import React, { useState } from 'react';\nimport Loading from './loading';\nimport { IStudent, IResp, IndexState, ReissueState } from '../constant';\nimport { issueApi, reissueApi } from '../utils';\n\ninterface IProps {\n  current: IndexState | ReissueState;\n  data: IStudent;\n  isEnglish: boolean;\n  changeCurrent: (update: any) => void;\n}\n\nexport default ((props: IProps) => {\n  const [isLoad, setLoad] = useState(true);\n\n  const handleClick = async (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    if (props.current === IndexState.READY) {\n      const data: IResp = await issueApi(\n        props.data.student_id,\n        props.isEnglish,\n      );\n      if (null !== data && data.applied) {\n        props.changeCurrent(IndexState.SUCCESS);\n      } else {\n        alert(null !== data ? data.error_msg : 'Cannot get data');\n        props.changeCurrent(IndexState.INPUT);\n      }\n    } else {\n      const data: IResp = await reissueApi(\n        props.data.student_id,\n        props.isEnglish,\n      );\n      if (null !== data && data.applied) {\n        props.changeCurrent(ReissueState.SUCCESS);\n      } else {\n        alert(null !== data ? data.error_msg : 'Cannot get data');\n        props.changeCurrent(ReissueState.INPUT);\n      }\n    }\n  };\n\n  return (\n    <div className=\"ready\">\n      <h1>資料確認</h1>\n      <span>學生姓名：{props.data.chinese_name}</span>\n      <span>出生日期：{props.data.birth_date}</span>\n      <span>\n        畢業系所：{props.data.graduate_univ + props.data.graduate_dept}\n      </span>\n      <span>其他資訊：{props.data.minor_d_major}</span>\n      <span>\n        申請證書：\n        {`${props.isEnglish ? '英文' : '中文'}證書 / ${\n          props.current === IndexState.READY ? '初辦' : '補證'\n        }`}\n      </span>\n      <div className=\"buttonlist\">\n        <button\n          onClick={() =>\n            props.changeCurrent(\n              props.current === IndexState.READY\n                ? IndexState.INPUT\n                : ReissueState.INPUT,\n            )\n          }\n        >\n          重新輸入\n        </button>\n        <div style={{ width: '10%' }} />\n        <button onClick={handleClick}>確定送出</button>\n        {\n          (isLoad) ? (\n            <Loading/>\n          ) : (<></>)\n        }\n      </div>\n      <style jsx>{`\n        .ready {\n          width: 800px;\n          border-radius: 20px;\n          border: solid 6px rgba(112, 112, 112, 0.16);\n          display: flex;\n          justify-content: flex-start;\n          align-items: center;\n          flex-direction: column;\n          color: #707070;\n        }\n        .buttonlist {\n          display: flex;\n          justify-content: center;\n          align-items: space-around;\n          flex-direction: row;\n          margin: 20px 0 20px 0;\n          width: 80%;\n        }\n        h1 {\n          -webkit-text-stroke: 1px #707070;\n          font-size: 48px;\n          text-align: center;\n          margin: 28px 0 0 0;\n        }\n        span {\n          font-size: 40px;\n          text-align: left;\n          width: 90%;\n          margin: 19px 0px 0px 0px;\n        }\n        button {\n          font-size: 32px;\n          color: #ffffff;\n          border: 0px;\n          border-radius: 40px;\n          background-color: rgba(71, 125, 230, 0.97);\n          padding: 5px 40px 5px 40px;\n        }\n        #load {\n\n        }\n      `}</style>\n    </div>\n  );\n}) as React.FC<IProps>;\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AA2FA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjGA;AACA;AACA;AACA;AASA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAcA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AA0BA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AA9BA;AAAA;AAAA;AA+EA;;;;A","sourceRoot":""}